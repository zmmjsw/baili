package com.baili.pms.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.baili.pms.common.core.emus.ResponseStatusEnum;
import com.baili.pms.common.core.util.PageResult;
import com.baili.pms.common.core.util.ResultUtil;
import com.baili.pms.entity.model.StoreProduct;
import com.baili.pms.entity.vo.ResponseVo;
import com.baili.pms.entity.vo.StoreProductConditionVo;
import com.baili.pms.service.StoreProductService;
import com.github.pagehelper.PageInfo;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
/**
 * 
* @ClassName: StoreProductController 
* @Description: TODO(这里用一句话描述这个类的作用) 
* @author zhumingming 
* @date 2018年6月4日 下午4:06:08 
*
 */
@Api(value="商户产品controller",tags={"商户产品操作接口"})
@RestController
@RequestMapping("/storeProduct")
public class StoreProductController {
	

	@Autowired
	private StoreProductService storeProductService;
	
	@PostMapping("/add")
	@ApiOperation(value="添加商户产品信息",notes="商户产品添加")
	public ResponseVo<StoreProduct> addStoreProduct(@Valid@RequestBody StoreProduct storeProduct) {
		storeProductService.addStoreProduct(storeProduct);
		return new ResponseVo<StoreProduct>(ResponseStatusEnum.SUCCESS);
	}
	
	@PostMapping("/delete")
	@ApiOperation(value="删除商户产品",notes="商户产品删除")
	public  ResponseVo<StoreProduct> deleteStoreProduct(@RequestParam(value = "id") Long id) {
		storeProductService.deleteStoreProduct(id);
		return new ResponseVo<StoreProduct>(ResponseStatusEnum.SUCCESS);
	}
	
	@PostMapping("/update")
	@ApiOperation(value="修改商户产品信息",notes="商户产品修改")
	public ResponseVo<StoreProduct> deleteStoreProduct(@Valid@RequestBody StoreProduct storeProduct) {
		storeProductService.updateStoreProduct(storeProduct);
		return new ResponseVo<StoreProduct>(ResponseStatusEnum.SUCCESS);
	}
	
	@PostMapping("/findOne")
	@ApiOperation(value="商户产品详情",notes="根据id查询详情")
	public ResponseVo<StoreProduct> findStoreProductById(@RequestParam(value = "id") Long id) {
		return new ResponseVo<StoreProduct>(ResponseStatusEnum.SUCCESS, storeProductService.findStoreProductById(id));
	}
	

	@PostMapping("/findList")
	@ApiOperation(value="商户产品列表",notes="根据条件查询商户产品列表")
	public PageResult<StoreProduct> findAllStoreProducts(@Valid@RequestBody StoreProductConditionVo vo) {
		PageInfo<StoreProduct> Products = storeProductService.findStoreProducts(vo);
		return ResultUtil.tablePage(Products);
	}

}
