package com.baili.pms.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.baili.core.common.emus.ResponseStatusEnum;
import com.baili.core.util.PageResult;
import com.baili.core.util.ResultUtil;
import com.baili.core.vo.ResponseVo;
import com.baili.pms.entity.Merchant;
import com.baili.pms.entity.vo.MerchantConditionVo;
import com.baili.pms.service.MerchantService;
import com.github.pagehelper.PageInfo;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
/**
 * 
* @ClassName: MerchantController 
* @Description: TODO(这里用一句话描述这个类的作用) 
* @author zhumingming 
* @date 2018年6月4日 下午3:33:59 
*
 */
@Api(value="商户controller",tags={"商户操作接口"})
@RestController
@RequestMapping("/merchant")
public class MerchantController {


	@Autowired
	private MerchantService merchantService;

	@PostMapping("/add")
	@ApiOperation(value="添加商户信息",notes="商户添加")
	public ResponseVo<Merchant> addMerchant(@Valid@RequestBody Merchant merchant) {
		merchantService.addMerchant(merchant);
		return new ResponseVo<Merchant>(ResponseStatusEnum.SUCCESS);
	}

	@PostMapping("/delete")
	@ApiOperation(value="删除商户",notes="商户删除")
	public ResponseVo<Merchant> deleteMerchant(@RequestParam(value = "id") Long id) {
		merchantService.deleteMerchant(id);
		return new ResponseVo<Merchant>(ResponseStatusEnum.SUCCESS);
	}

	@PostMapping("/update")
	@ApiOperation(value="修改商户信息",notes="商户修改")
	public ResponseVo<Merchant> deleteMerchant(@Valid@RequestBody Merchant merchant) {
		merchantService.updateMerchant(merchant);
		return new ResponseVo<Merchant>(ResponseStatusEnum.SUCCESS);
	}

	@GetMapping("/findOne")
	@ApiOperation(value="商户详情",notes="根据id查询详情")
	public ResponseVo<Merchant> findMerchantById(@RequestParam(value = "id") Long id) {
		return new ResponseVo<Merchant>(ResponseStatusEnum.SUCCESS,merchantService.findMerchantById(id));
	}

	@PostMapping("/findList")
	@ApiOperation(value="商户列表",notes="根据条件查询商户列表")
	public PageResult<Merchant> findAllMerchant(@Valid@RequestBody MerchantConditionVo vo) {
		PageInfo<Merchant> findMerchants = merchantService.findMerchants(vo);
		return  ResultUtil.tablePage(findMerchants);
	}

}
