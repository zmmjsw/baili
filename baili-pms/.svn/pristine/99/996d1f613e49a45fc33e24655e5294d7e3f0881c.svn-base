package com.baili.pms.controller;

import javax.validation.Valid;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.lang.NonNull;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.baili.core.common.emus.ResponseStatusEnum;
import com.baili.core.util.PageResult;
import com.baili.core.util.ResultUtil;
import com.baili.core.vo.ResponseVo;
import com.baili.pms.entity.Product;
import com.baili.pms.entity.vo.ProductConditionVo;
import com.baili.pms.service.ProductService;
import com.github.pagehelper.PageInfo;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
 * 
* @ClassName: ProductController 
* @Description: TODO(商品接口类) 
* @author zhumingming 
* @date 2018年5月31日 下午1:53:31 
*
 */
@Api(value="产品controller",tags={"产品操作接口"})
@RestController
@RequestMapping("/product")
public class ProductController {
	

	@Autowired
	private ProductService productService;
	
	@PostMapping("/add")
	@ApiOperation(value="添加产品信息",notes="产品添加")
	public ResponseVo<Product> addProduct(@Valid@RequestBody Product product) {
		productService.addProduct(product);
		return new ResponseVo<Product>(ResponseStatusEnum.SUCCESS);
	}
	
	@PostMapping("/delete")
	@ApiOperation(value="删除产品",notes="产品删除")
	public ResponseVo<Product> deleteProduct(@NonNull@RequestParam(value = "id") Long id) {
		productService.deleteProduct(id);
		return new ResponseVo<Product>(ResponseStatusEnum.SUCCESS);
	}
	
	@PostMapping("/update")
	@ApiOperation(value="修改产品信息",notes="产品修改")
	public ResponseVo<Product> deleteProduct(@Valid@RequestBody Product product) {
		productService.updateProduct(product);
		return new ResponseVo<Product>(ResponseStatusEnum.SUCCESS);
	}
	
	@PostMapping("/findOne")
	@ApiOperation(value="产品详情",notes="根据id查询详情")
	public ResponseVo<Product> findProductById(@RequestParam(value = "id") Long id) {
		return new ResponseVo<Product>(ResponseStatusEnum.SUCCESS, productService.findProductById(id));
	}
	
	@PostMapping("/findList")
	@ApiOperation(value="产品列表",notes="根据条件查询产品列表")
	@RequiresPermissions("userInfo:user") // 权限管理;
	public PageResult<Product> findAllProducts(@Valid@RequestBody ProductConditionVo vo) {
		PageInfo<Product> Products = productService.findProducts(vo);
		return ResultUtil.tablePage(Products);
	}

}
